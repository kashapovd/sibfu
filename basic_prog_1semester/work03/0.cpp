/*
 * 1. Разработать графическую алгоритма и программу, которая для двух целых чисел,
 * введенных с клавиатуры, вычисляет остаток от целочисленного деления,
 * частное от целочисленного деления первого числа на второе, а также частное от вещественного деления.

 * 2. Провести трассировку программы с помощью встроенного в среду программирования отладчика,
 * анализируя значения переменных после каждого оператора присваивания.

 * 3. Выполнить несколько запусков программы для заранее подготовленных тестовых наборов данных.
 * Сделать вывод результатов с применением потокового ввода-вывода, используя следующие методы потоков – width(),
 * precision() и fill() с различными параметрами (не менее 3 для каждого метода), а также флаги left, right,
 * устанавливаемые с помощью метода setf(). Проанализировать полученные результаты.

 * 4. Выполнить несколько запусков программы для заранее подготовленных тестовых примеров для проверки
 * работоспособности всех ветвей программы. Для тестовых примеров рекомендуется взять как произвольные значения исходных данных,
 *так и критические значения (например, ноль). Полученные результаты проанализировать.
 */

#include <iostream>

using namespace std;

int main() {

    int a, b;
    int div1, div2;
    double div3;

    cout << "a = ";
    cin >> a;
    cout << "b = ";
    cin >> b;

    if ( b == 0 ) {
        cout << "Делить на ноль нельзя\n";
        return 1;
    }

    div1 = a % b;
    div2 = a / b;
    div3 = static_cast<double>(a) / b;

    cout.width(16);
    cout.precision(1);
    cout.fill('x');
    cout.setf(ios::left);
    cout << "div1 = ";
    cout << div1 << "\n";
    cout.unsetf(ios::left);


    cout.width(12);
    cout.fill('.');
    cout << "div2 = ";
    cout.setf(ios::right);
    cout << div2 << "\n";
    cout.unsetf(ios::right);


    cout.width(10);
    cout.precision(10);
    cout.setf(ios::left);
    cout << "div3 = ";
    cout << div3 << "\n";

    cout.width(10);
    cout.fill('*');
    cout.precision(2);
    cout.setf(ios::right);
    cout << "div3 = ";
    cout << div3 << "\n";
    return 0;
}
