(function() {var implementors = {};
implementors["work1"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/lexer/struct.Lexer.html\" title=\"struct work1::lexer::Lexer\">Lexer</a>","synthetic":false,"types":["work1::lexer::Lexer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"work1/token/enum.TokenType.html\" title=\"enum work1::token::TokenType\">TokenType</a>","synthetic":false,"types":["work1::token::TokenType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/token/struct.Token.html\" title=\"struct work1::token::Token\">Token</a>","synthetic":false,"types":["work1::token::Token"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/list/struct.Slist.html\" title=\"struct work1::list::Slist\">Slist</a>","synthetic":false,"types":["work1::list::Slist"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/list/struct.Node.html\" title=\"struct work1::list::Node\">Node</a>","synthetic":false,"types":["work1::list::Node"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"work1/entities/enum.InheritanceType.html\" title=\"enum work1::entities::InheritanceType\">InheritanceType</a>","synthetic":false,"types":["work1::entities::InheritanceType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"work1/entities/enum.LanguageType.html\" title=\"enum work1::entities::LanguageType\">LanguageType</a>","synthetic":false,"types":["work1::entities::LanguageType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/entities/struct.OopLang.html\" title=\"struct work1::entities::OopLang\">OopLang</a>","synthetic":false,"types":["work1::entities::OopLang"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/entities/struct.ProcedureLang.html\" title=\"struct work1::entities::ProcedureLang\">ProcedureLang</a>","synthetic":false,"types":["work1::entities::ProcedureLang"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for dyn <a class=\"trait\" href=\"work1/entities/trait.Language.html\" title=\"trait work1::entities::Language\">Language</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/parser/struct.Parser.html\" title=\"struct work1::parser::Parser\">Parser</a>","synthetic":false,"types":["work1::parser::Parser"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"work1/cmd/enum.CmdType.html\" title=\"enum work1::cmd::CmdType\">CmdType</a>","synthetic":false,"types":["work1::cmd::CmdType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"work1/cmd/struct.Command.html\" title=\"struct work1::cmd::Command\">Command</a>","synthetic":false,"types":["work1::cmd::Command"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()